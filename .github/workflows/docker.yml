name: Publish Docker Image
on: 
  push:
    branches: [ master ]
    tags:
      - '**'

concurrency: 
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  amd64_build:
    name: Build AMD64 Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and export
        id: build
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          context: scripts/
          tags: longzhiyi/subconverter:latest
          build-args: |
            SHA=${{ steps.vars.outputs.sha_short }}
          outputs: type=image,push=true

      - name: Replace tag without `v`
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/github-script@v6
        id: version
        with:
          script: |
            return context.payload.ref.replace(/\/?refs\/tags\/v/, '')
          result-encoding: string

      - name: Build release and export
        id: build_rel
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          context: scripts/
          tags: longzhiyi/subconverter:${{steps.version.outputs.result}}
          outputs: type=image,push=true

      - name: Save digest
        if: github.ref == 'refs/heads/master'
        run: echo ${{ steps.build.outputs.digest }} > /tmp/digest.txt

      - name: Save release digest
        if: startsWith(github.ref, 'refs/tags/')
        run: echo ${{ steps.build_rel.outputs.digest }} > /tmp/digest.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: digest_amd64
          path: /tmp/digest.txt

  x86_build:
    name: Build x86 Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and export
        id: build
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v3
        with:
          platforms: linux/386
          context: scripts/
          tags: longzhiyi/subconverter:latest
          build-args: |
            SHA=${{ steps.vars.outputs.sha_short }}
          outputs: type=image,push=true

      - name: Replace tag without `v`
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/github-script@v6
        id: version
        with:
          script: |
            return context.payload.ref.replace(/\/?refs\/tags\/v/, '')
          result-encoding: string

      - name: Build release and export
        id: build_rel
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v3
        with:
          platforms: linux/386
          context: scripts/
          tags: longzhiyi/subconverter:${{steps.version.outputs.result}}
          outputs: type=image,push=true

      - name: Save digest
        if: github.ref == 'refs/heads/master'
        run: echo ${{ steps.build.outputs.digest }} > /tmp/digest.txt

      - name: Save release digest
        if: startsWith(github.ref, 'refs/tags/')
        run: echo ${{ steps.build_rel.outputs.digest }} > /tmp/digest.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: digest_386
          path: /tmp/digest.txt

  # armv7_build:
  #   name: Build ARMv7 Image
  #   runs-on: [self-hosted, linux, ARM64]
  #   steps:
  #     - name: Checkout base
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Docker login
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Get commit SHA
  #       id: vars
  #       run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

  #     - name: Build and export
  #       id: build
  #       if: github.ref == 'refs/heads/master'
  #       uses: docker/build-push-action@v3
  #       with:
  #         platforms: linux/arm/v7
  #         context: scripts/
  #         tags: longzhiyi/subconverter:latest
  #         build-args: |
  #           SHA=${{ steps.vars.outputs.sha_short }}
  #           THREADS=2
  #         outputs: type=image,push=true

  #     - name: Replace tag without `v`
  #       if: startsWith(github.ref, 'refs/tags/')
  #       uses: actions/github-script@v6
  #       id: version
  #       with:
  #         script: |
  #           return context.payload.ref.replace(/\/?refs\/tags\/v/, '')
  #         result-encoding: string

  #     - name: Build release and export
  #       id: build_rel
  #       if: startsWith(github.ref, 'refs/tags/')
  #       uses: docker/build-push-action@v3
  #       with:
  #         platforms: linux/arm/v7
  #         context: scripts/
  #         tags: longzhiyi/subconverter:${{steps.version.outputs.result}}
  #         build-args: |
  #           THREADS=2
  #         outputs: type=image,push=true

  #     - name: Save digest
  #       if: github.ref == 'refs/heads/master'
  #       run: echo ${{ steps.build.outputs.digest }} > /tmp/digest.txt

  #     - name: Save release digest
  #       if: startsWith(github.ref, 'refs/tags/')
  #       run: echo ${{ steps.build_rel.outputs.digest }} > /tmp/digest.txt

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: digest_armv7
  #         path: /tmp/digest.txt

  arm64_build:
    name: Build ARM64 Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Build and export
        id: build
        uses: docker/build-push-action@v5
        with:
          platforms: ${{ matrix.platform }}
          context: scripts/
          tags: tindy2013/subconverter:latest
          build-args: |
            SHA=${{ steps.vars.outputs.sha_short }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          rm -rf /tmp/digests
          tags: tindy2013/subconverter:${{steps.version.outputs.result}}
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: digest-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [worker.oci]
              max-parallelism = 1

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          path: /tmp/images/

#      - name: Load image
#        if: github.ref == 'refs/heads/master'
#        run: |
#          docker load --input /tmp/image_amd64/image_amd64.tar
#          docker load --input /tmp/image_386/image_386.tar
#          docker load --input /tmp/image_armv7/image_armv7.tar
#          docker load --input /tmp/image_arm64/image_arm64.tar
#          docker image ls -a

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)      
    
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
